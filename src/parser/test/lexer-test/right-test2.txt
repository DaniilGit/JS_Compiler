Loc=<1:3>  LET let
Loc=<1:9>  ID array
Loc=<1:11>  ASSIGN =
Loc=<1:13>  L_SQUARE [
Loc=<1:14>  INT 5
Loc=<1:15>  COMMA ,
Loc=<1:18>  INT 10
Loc=<1:19>  COMMA ,
Loc=<1:21>  INT 2
Loc=<1:22>  COMMA ,
Loc=<1:24>  INT 3
Loc=<1:25>  COMMA ,
Loc=<1:27>  INT 4
Loc=<1:28>  COMMA ,
Loc=<1:31>  INT 12
Loc=<1:32>  COMMA ,
Loc=<1:34>  INT 1
Loc=<1:35>  COMMA ,
Loc=<1:38>  INT 54
Loc=<1:39>  R_SQUARE ]
Loc=<1:40>  SEMI ;
Loc=<2:3>  LET let
Loc=<2:7>  ID min
Loc=<2:9>  ASSIGN =
Loc=<2:11>  INT 0
Loc=<2:12>  SEMI ;
Loc=<4:3>  FOR for
Loc=<4:5>  L_ROUND (
Loc=<4:8>  LET let
Loc=<4:10>  ID i
Loc=<4:12>  ASSIGN =
Loc=<4:14>  INT 0
Loc=<4:15>  SEMI ;
Loc=<4:17>  ID i
Loc=<4:19>  LESS <
Loc=<4:25>  ID array
Loc=<4:26>  DOT .
Loc=<4:32>  ID length
Loc=<4:34>  MINUS -
Loc=<4:36>  INT 1
Loc=<4:37>  SEMI ;
Loc=<4:39>  ID i
Loc=<4:42>  PLUS_ASSIGN +=
Loc=<4:44>  INT 1
Loc=<4:45>  R_ROUND )
Loc=<4:47>  L_FIGURE {
Loc=<5:4>  IF if
Loc=<5:6>  L_ROUND (
Loc=<5:11>  ID array
Loc=<5:12>  L_SQUARE [
Loc=<5:13>  ID i
Loc=<5:14>  R_SQUARE ]
Loc=<5:16>  GREATER >
Loc=<5:22>  ID array
Loc=<5:23>  L_SQUARE [
Loc=<5:24>  ID i
Loc=<5:25>  PLUS +
Loc=<5:26>  INT 1
Loc=<5:27>  R_SQUARE ]
Loc=<5:28>  R_ROUND )
Loc=<6:7>  ID min
Loc=<6:9>  ASSIGN =
Loc=<6:15>  ID array
Loc=<6:16>  L_SQUARE [
Loc=<6:17>  ID i
Loc=<6:18>  PLUS +
Loc=<6:19>  INT 1
Loc=<6:20>  R_SQUARE ]
Loc=<6:21>  SEMI ;
Loc=<7:1>  R_FIGURE }
