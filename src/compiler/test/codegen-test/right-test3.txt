target triple = "x86_64-pc-linux-gnu"
declare i32 @__isoc99_scanf(i8*, ...)
@.stdin_0 = private unnamed_addr constant [3 x i8] c"%d\00"
declare i32 @printf(i8*, ...)
@.j812 = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@.str_9 = private unnamed_addr constant [4 x i8] c"%s\0A\00"
@.literal_str_9 = private unnamed_addr constant [5 x i8] c"Sum:\00"
@.sum1222 = private unnamed_addr constant [4 x i8] c"%d\0A\00"

define dso_local i32 @main() {
  %n34 = alloca i32
  %read_stdin_0 = call i32 (i8*, ...) @__isoc99_scanf(i8* getelementptr ([3 x i8], [3 x i8]* @.stdin_0, i64 0, i64 0), i32* %n34)

  %j54 = alloca i32
  %op_1 = mul nsw i32 5, 10
  %tmp_n519 = load i32, i32* %n34
  %op_2 = sub i32 %tmp_n519, 5
  %op_3 = add nsw i32 %op_1, %op_2
  %op_4 = sdiv i32 %op_3, 10
  store i32 %op_4, i32* %j54

  %sum64 = alloca i32
  store i32 0, i32* %sum64

  %tmp_j812 = load i32, i32* %j54
  %write_j812 = call i32 (i8*, ...) @printf(i8* getelementptr ([4 x i8], [4 x i8]* @.j812, i64 0, i64 0), i32 %tmp_j812)

  %i109 = alloca i32
  store i32 0, i32* %i109

  br label %mark_0

mark_0:
  %tmp_i109_5 = load i32, i32* %i109
  %op_6 = icmp slt i32 %tmp_i109_5, 5
  br i1 %op_6, label %mark_1, label %mark_2

mark_1:
  %tmp_i1027 = load i32, i32* %i109
  %op_7 = add nsw i32 %tmp_i1027, 1
  store i32 %op_7, i32* %i109

  %tmp_n118 = load i32, i32* %n34
  %tmp_j1112 = load i32, i32* %j54
  %op_8 = add nsw i32 %tmp_n118, %tmp_j1112
  store i32 %op_8, i32* %sum64

  %write_str_9 = call i32 (i8*, ...) @printf(i8* getelementptr ([4 x i8], [4 x i8]* @.str_9, i64 0, i64 0), i8* getelementptr ([5 x i8], [5 x i8]* @.literal_str_9, i64 0, i64 0))

  %tmp_sum1222 = load i32, i32* %sum64
  %write_sum1222 = call i32 (i8*, ...) @printf(i8* getelementptr ([4 x i8], [4 x i8]* @.sum1222, i64 0, i64 0), i32 %tmp_sum1222)

  br label %mark_0

mark_2:
  ret i32 0
}